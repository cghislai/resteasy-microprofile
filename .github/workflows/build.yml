# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: RESTEasy MicroProfile Build and Test

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '.gitignore'
      - ".mvn"
      - "CODEOWNERS"
      - "CODE_OF_CONDUCT.md"
      - "CONTRIBUTING.adoc"
      - "dco.txt"
      - "LICENSE"
      - "mvnw"
      - "mvnw.cmd"
      - "README.adoc"
      - "security.txt"
      - "*/README.adoc"
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
    paths-ignore:
      - '.gitignore'
      - ".mvn"
      - "CODEOWNERS"
      - "CODE_OF_CONDUCT.md"
      - "CONTRIBUTING.adoc"
      - "dco.txt"
      - "LICENSE"
      - "mvnw"
      - "mvnw.cmd"
      - "README.adoc"
      - "security.txt"
      - "*/README.adoc"

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        java: [ '11', '17' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven Java ${{ matrix.java }}  - ${{ matrix.os }}
        run: |
          mvn clean install -U -B -fae  -Pci
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}-${{ matrix.java }}
          path: '**/surefire-reports/*.txt'

  additional-profiles:
    name: Test with ${{ matrix.profile }} - JDK ${{ matrix.java }} - WildFly ${{ matrix.wildfly-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: [ '11', '17' ]
        profile:
          - "'-Dsecurity.manager'"
          - "'-Dprovision.preview'"
        wildfly-version: ['28.0.0.Final']

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      # This must be run after the previous setup to ensure the JAVA_HOME is always Java 11.
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      # Since we need to pass the test.java.home we need different runs for Linux and Windows
      - name: Test with Java ${{ matrix.java }} - ${{ matrix.profile }}
        run: |
          mvn clean install -U -B -fae ${{ matrix.profile }} -Pci '-Dversion.org.wildfly=${{ matrix.wildfly-version }}'
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: surefire-reports-${{ matrix.profile }}-${{ matrix.java }}
          path: '**/surefire-reports/*.txt'

  format-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Validate Formatting
        run: |
          mvn -B validate -Pformat-check -Denforcer.skip=true

